:PROPERTIES:
:ID:       68c33ff8-27b5-4062-be0e-b5e73a7b9e9c
:END:
#+title: emacs

* emacs にまつわるお話
** emacs をつかう理由
なぜ Emacs をつかうかということがあります。かつて私は多くの友に emacs を使ってもらうように説得してきました。しかしそれは虚しくも、実現したことはありません。しかし[[https://www.emacswiki.org/emacs/ChurchOfEmacs][church of emacs]]のミッショナリーをやめるつもりもありません。むしろその活動の軸として、「emacs とはなにか」といったざっくりとした疑問に私なりに答えることで、読者の方の [[https://geekfeminismdotorg.wordpress.com/2009/11/14/quick-hit-richard-stallman-comments-on-emacs-virgins-incident/][emacs virginity]] を失わせたいと考えています。
** 宗教戦争について
vim と emacs の 戦いの歴史というものを、なんとなく知っている人はいるとおもいます。そのなかには陰湿で終りのない論争を想像し、そうした面倒をさけるために、これらいずれのエディタを使わないという選択をしてきた方もおおいかもしれません。ですが私としては、平和な実情があり、またそれを選択できる自由があるということをお伝えしたいです。
*** Doom Emacs の登場
長らく続いてきた戦争（と呼ばれてきた、半分本気で半分悪ふざけの論争のようなもの）は合併という形で終りを迎えるのではないかと思います。[[https://github.com/doomemacs/doomemacs][Doom Emacs]]は emacs の内側で vim のキーバインディングが用いることができるという、巨大なパッケージです。これを使うかぎりは、どちらのエディタもよほどいずれかの固有な機能にこだわりのある人でない限り、どっちにいったって問題はないですし、どちらも苦がなく楽しめるのかなとおもいます。そしてなによりも、争いがなくなって、何となくはなれていた潜在的なユーザがでてきて、たのしくエディタの話をできる友達が増える可能性が増えるといいなと、、、望んでいるといった次第です。


* emacs とは
** 名称から考える
おおまかに emacs についてしってみましょう。 emacs をエディタとしてしっている人は多いかもしれませんが、それがなんの略称か知っているひとは少ないでしょう。
諸説ありますが、 ~Editor MACroS~ の略だというのが一般的なものだと思います。
[[https://ec.europa.eu/eurostat/cros/content/macro-editing-theme_en#:~:text=Macro-editing%20(also%20known%20as,part%20thereof%2C%20have%20been%20collected.][ここ]]でマクロとは
#+begin_quote
Macros provide a convenient way to automate repetitive procedures you do frequently while writing code. You can record, edit and play back macros, assign a shortcut to them, and share them.
#+end_quote
というふうにいわれています。こうしたものが複数あるということが"Editor Macro"だといいたいわけです。[[https://ja.wikipedia.org/wiki/聖イグヌチウス][聖イグヌチウス]]はインタビューやカンファレンスで、ことあるごとにプロプラエタリからソフトウェアを解放する、OSS の自由の思想を語っており、上記引用の"share them"の部分を重視しているところがあります。ところがこの引用でいわれていることは 、OSS なのも含め、vim や他のモダンなエディタ（vscode など）でもできるとツッコミがはいりやすいところです。

*** 自由のためのマクロ
「スクリプトを share する」という言葉は少し足りないきがします。個人的には、エディタマクロが share されるのというのは、それを参照することを大いにサポートされているということなのだとおもいます。もちろん [[https://vim-jp.org/vimdoc-ja/tagsrch.html][tag jump]]などを用いて同じようなことを実現することは可能ですが、それはユーザーの手に委ねられます。しかし Emacs はそれをはじめから用意し、そのための関数（マクロ）を予め用意しています。Emacs をつかわずとも、他のひとのコードをよむということはもちろんできますが、Emacs はそういったことを手取り足取り教えてくれるわけです。

*** emacs なりの自由さ
以上で EMACS は自由があるということを少し熱血な感じのことをお話しましたけれども、まだ emacs の emacs らしさというのが明かにできてはいませんね。それを知るためには、今現在も誰かが開発している emacs のパッケージをつかったり、みてみるしかありません。このようにして emacs の「らしさ」をさがすためにスクリプトをかくというのは個人的に好きなことで、みなさんにも興味をもってほしいとおもっていることです。
次の headline にいくまえに、簡単な例を挙げようとおもいます。それは、この homepage のことです。このページは org-roam という Package の一部の機能を用いて作られています。ローカルで編集したマークダウンのデータをいれている sqlite の データベースがあるのですが、その操作を行えそうな関数をさがし、そのまま使用して json に書き出して react によみやすいようにすることがササッとできるわけですね。マークダウンエディタはさまざまありますが、マクロ（何どもこう呼んでいますが、実際はただの関数です）がキーバインドされてつかえて、一部の機能を切り出して使えるというのは「らしさ」っちゃ「らしさ」だとおもいます。

このような「らしさ」のナレッジとして、以降の headline と関連したノードを編集していくつもりです。

* 現在開発中の Emacs「らしい」Package
現在作っているものが両方とも private なのが恥しくなってきました、、、

** pokel.el（repository まだ public じゃないです）
emacs のモードライン（現在のファイル名やどんな LSP をつかっているか、あるいは文字通り mode を表示する場所,vim の status line のようなもの）上でポケモンを育てるパッケージ。経験値は、そのポケモンに対応した git リポジトリのコミットしたコードの＋とーの量です。というのは、いっぱい書くのはいいこと（賛否あるかもしれません）で、減らすのもまたいい事だとおもうからです。
もちろん VIM でも status line[[https://twitter.com/p_ck_/status/799997811689275394][おすしをながしたり]]できるらしいが、terminal の中では画像の表示は、少々厳しいのではないかと思い、emacs らしいと思っています。あとそういったものを商業用のソフトウェアではだせないというのもあるかなとおもいます。というか、こういうポケモンの画像ををつかった OSS ってグレーなんじゃないかという気持と未熟な elisp をだすのが恥しい気持ちで、public にできていないのは、はやくなんとかしたいです。
ちなみに、ポケモンのアイコン画像は[[https://pokeapi.co/][pokeAPI]]をつかって取得します。

** godosousa.el（repository まだ public じゃないです）
[[https://godotengine.org/][godot]]という game engine がございまして、その GUI の操作が少々面倒で、ゲームをつくることをそっちのけで、emacs 側から操作するために開発中の package です。実際のところ何をしているかというと、[[e][scene]]というゲームのオブジェクトを組み上げる為のファイルがありまして、それは本来 GUI
操作で安全に書き換えているわけなんですが、それを Emacs 側からやろうという考えです。shell でもかいてみていますが、余り進んでいません。あれ？それじゃ、Emacs らしさがないじゃないか、と
お思いになってしまうかもしれませんが、いい感じでゲームの全体像をみれるようにする[[https://mugijiru.github.io/posts/try-org-agenda/][org-agenda]]的な buffer を用意したいとおもっているから、一応。。。
